{"version":3,"sources":["components/Card/card.module.css","components/Card/card.jsx","api/index.js","components/Country-picker/country-picker.jsx","components/Line-chart/line-chart.jsx","components/bar-chart/bar-chart.jsx","components/Chart/chart.jsx","App.js","index.js","App.module.css","components/Country-picker/country-picker.module.css","components/Chart/chart.module.css","assets/images/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cn","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","modifiedData","console","error","fetchDailyData","map","dailyData","total","date","reportDate","fetchCountriesData","countries","name","CountryPicker","handleCountryChanges","useState","dataCountry","setDataCountry","useEffect","fetchedAPI","fetchAPI","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","idx","key","LineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","BarChart","options","legend","title","display","text","Chart","setDailyData","App","state","fetchedData","setState","this","src","covidImage","alt","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.af7f352d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"card_container__1ddLD\",\"card\":\"card_card__1Nj7v\",\"infected\":\"card_infected__2piqT\",\"recovered\":\"card_recovered__2x9kH\",\"deaths\":\"card_deaths__39boW\"};","import React, { useState, useEffect } from \"react\";\r\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\r\nimport styles from \"./card.module.css\";\r\nimport CountUp from \"react-countup\";\r\nimport cn from \"classnames\";\r\n\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n  if (!confirmed) {\r\n    return \"Loading...\";\r\n  }\r\n  return (\r\n    <div className={styles.container}>\r\n      <Grid container spacing={3} justify=\"center\">\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cn(styles.card, styles.infected)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Terinfeksi\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={confirmed.value}\r\n                duration={2}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Jumlah orang yang terinfeksi virus COVID-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cn(styles.card, styles.recovered)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Sembuh\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={recovered.value}\r\n                duration={2}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Jumlah pasien yang sembuh dari virus COVID-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cn(styles.card, styles.deaths)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Meninggal\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={deaths.value}\r\n                duration={2}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Jumlah pasien yang meninggal akibat COVID-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n\r\n// {\r\n//   confirmed, recovered, deaths, lastUpdate;\r\n// }\r\n\r\n// const [totalCard, setTotalCard] = useState([\r\n//   {\r\n//     title: \"Infected\",\r\n//     body2: \"Number of active cases of COVID-19\",\r\n//     dataNumber: null,\r\n//     dataDate: null,\r\n//     id: 1,\r\n//   },\r\n//   {\r\n//     title: \"Recovered\",\r\n//     body2: \"Number of recoveries from COVID-19\",\r\n//     dataNumber: null,\r\n//     dataDate: null,\r\n//     id: 2,\r\n//   },\r\n//   {\r\n//     title: \"Deaths\",\r\n//     body2: \"Number of deaths caused by COVID-19\",\r\n//     dataNumber: null,\r\n//     dataDate: null,\r\n//     id: 3,\r\n//   },\r\n// ]);\r\n","import axios from \"axios\";\r\n\r\nconst url = \"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData = async (country) => {\r\n  let changeableUrl = url;\r\n\r\n  if (country) {\r\n    changeableUrl = `${url}/countries/${country}`;\r\n  }\r\n\r\n  try {\r\n    const {\r\n      data: { confirmed, deaths, lastUpdate, recovered },\r\n    } = await axios.get(changeableUrl);\r\n\r\n    const modifiedData = {\r\n      confirmed,\r\n      deaths,\r\n      lastUpdate,\r\n      recovered,\r\n    };\r\n\r\n    return modifiedData;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${url}/daily`);\r\n\r\n    const modifiedData = data.map((dailyData) => ({\r\n      confirmed: dailyData.confirmed.total,\r\n      deaths: dailyData.deaths.total,\r\n      date: dailyData.reportDate,\r\n    }));\r\n\r\n    return modifiedData;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nexport const fetchCountriesData = async () => {\r\n  try {\r\n    const {\r\n      data: { countries },\r\n    } = await axios.get(`${url}/countries`);\r\n\r\n    return countries.map((country) => country.name);\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\r\nimport styles from \"./country-picker.module.css\";\r\nimport { fetchCountriesData } from \"../../api\";\r\n\r\nconst CountryPicker = ({ handleCountryChanges }) => {\r\n  const [dataCountry, setDataCountry] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      const fetchedAPI = await fetchCountriesData();\r\n\r\n      setDataCountry(fetchedAPI);\r\n    };\r\n\r\n    fetchAPI();\r\n  }, [setDataCountry]);\r\n\r\n  return (\r\n    <FormControl className={styles.formControl}>\r\n      <NativeSelect\r\n        defaultValue=\"\"\r\n        onChange={(e) => handleCountryChanges(e.target.value)}\r\n      >\r\n        <option value=\"\">Global</option>\r\n        {dataCountry.map((country, idx) => (\r\n          <option key={idx} value={country}>\r\n            {country}\r\n          </option>\r\n        ))}\r\n      </NativeSelect>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default CountryPicker;\r\n","import React from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\nconst LineChart = ({ dailyData }) =>\r\n  dailyData.length ? (\r\n    <Line\r\n      data={{\r\n        labels: dailyData.map(({ date }) => date),\r\n        //2 object is infected and deaths\r\n        datasets: [\r\n          {\r\n            data: dailyData.map(({ confirmed }) => confirmed),\r\n            label: \"Terinfeksi\",\r\n            borderColor: \"#3333ff\",\r\n            fill: true,\r\n          },\r\n          {\r\n            data: dailyData.map(({ deaths }) => deaths),\r\n            label: \"Meninggal\",\r\n            borderColor: \"red\",\r\n            backgroundColor: \"rgba(255, 0, 0, 0.5)\",\r\n            fill: true,\r\n          },\r\n        ],\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\nexport default LineChart;\r\n","import React from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\n\r\nconst BarChart = ({ data: { confirmed, recovered, deaths }, country }) =>\r\n  confirmed ? (\r\n    <Bar\r\n      data={{\r\n        labels: [\"Terinfeksi\", \"Sembuh\", \"Meninggal\"],\r\n        datasets: [\r\n          {\r\n            label: \"\",\r\n            backgroundColor: [\r\n              \"rgba(0, 0, 255, 0.5)\",\r\n              \"rgba(0, 255, 0, 0.5)\",\r\n              \"rgba(255, 0, 0, 0.5)\",\r\n            ],\r\n            data: [confirmed.value, recovered.value, deaths.value],\r\n          },\r\n        ],\r\n      }}\r\n      options={{\r\n        legend: false,\r\n        title: { display: true, text: `Data saat ini di negara ${country}` },\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\nexport default BarChart;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styles from \"./chart.module.css\";\r\nimport { fetchDailyData } from \"../../api\";\r\nimport LineChart from \"../Line-chart/line-chart\";\r\nimport BarChart from \"../bar-chart/bar-chart\";\r\n\r\nconst Chart = ({ data, country }) => {\r\n  const [dailyData, setDailyData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      const dailyData = await fetchDailyData();\r\n\r\n      setDailyData(dailyData);\r\n    };\r\n\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      {country ? (\r\n        <BarChart data={data} country={country} />\r\n      ) : (\r\n        <LineChart dailyData={dailyData} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React, { Component } from \"react\";\r\nimport { Cards, Chart, CountryPicker } from \"./components/export\";\r\nimport styles from \"./App.module.css\";\r\nimport { fetchData } from \"./api\";\r\nimport covidImage from \"../src/assets/images/image.png\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    data: {},\r\n    country: \"\",\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const fetchedData = await fetchData();\r\n\r\n    this.setState({ data: fetchedData });\r\n  }\r\n\r\n  handleCountryChanges = async (country) => {\r\n    const fetchedData = await fetchData(country);\r\n\r\n    this.setState({ data: fetchedData, country: country });\r\n  };\r\n\r\n  render() {\r\n    const { data, country } = this.state;\r\n    return (\r\n      <div className={styles.container}>\r\n        <img src={covidImage} className={styles.covidImage} alt=\"covid19\" />\r\n        <Cards data={data} />\r\n        <CountryPicker handleCountryChanges={this.handleCountryChanges} />\r\n        <Chart data={data} country={country} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","import React from \"react\";\r\n\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3tfo1\",\"covidImage\":\"App_covidImage__nFU_l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"country-picker_formControl__3UCXv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"chart_container__1de7S\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}